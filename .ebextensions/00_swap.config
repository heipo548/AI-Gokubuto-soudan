option_settings:
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    # devDependencies をインストールし、postinstall でビルドするために NPM_CONFIG_PRODUCTION: false は意図的と仮定
    NPM_CONFIG_PRODUCTION: false
    NPM_CONFIG_UNSAFE_PERM: true  # 必要性を確認。セキュリティリスクを伴う場合あり。
    NPM_CONFIG_TIMEOUT: 600000
    NPM_CONFIG_FUND: false
    NPM_CONFIG_AUDIT: false
    PORT: 8080 # Elastic Beanstalk はこのポートでアプリケーションがリッスンすることを期待
    # DATABASE_URL や DIRECT_URL は、Beanstalk の環境変数設定 (GUI) から行うことを推奨
    # もし .config ファイルで設定する場合は以下のように記述 (値は実際のものを設定)
    # DATABASE_URL: "your_database_url_here"
    # DIRECT_URL: "your_direct_url_here"
  aws:autoscaling:launchconfiguration:
    InstanceType: t3.micro
  # aws:elasticbeanstalk:container:nodejs: # このネームスペース下の問題のあった設定を削除
    # NodeCommand: "npm start"            # 削除: package.json の scripts.start を使用
    # GzipCompression: true             # 削除: Nginx 側で設定
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    # HealthCheckSuccessThreshold: Warning # この設定が意図通り機能しているか確認

commands:
  # スワップ設定 (詳細な方を採用)
  01_create_swap_file:
    command: "sudo fallocate -l 2G /swapfile"
    test: "test ! -f /swapfile"
  02_set_permissions:
    command: "sudo chmod 600 /swapfile"
    test: "test -f /swapfile"
  03_mkswap:
    command: "sudo mkswap /swapfile"
    test: "test -f /swapfile && ! sudo blkid -t TYPE=swap /swapfile >/dev/null 2>&1"
  04_swapon:
    command: "sudo swapon /swapfile"
    test: 'test -f /swapfile && sudo blkid -t TYPE=swap /swapfile >/dev/null 2>&1 && ! grep -q "^/swapfile" /proc/swaps'
  05_ensure_fstab_entry:
    command: "grep -qxF '/swapfile swap swap defaults 0 0' /etc/fstab || echo '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab"
    test: "test -f /swapfile"

  # 下部にあった重複するスワップ設定 (01_increase_swap) と npm config 設定は削除
  # 02_npm_config:
  #   command: "npm config set fetch-timeout 600000"
  #   ignoreErrors: true
  # 03_npm_registry:
  #   command: "npm config set registry https://registry.npmjs.org/"
  #   ignoreErrors: true

container_commands:
  01_prisma_generate:
    command: "npm run prisma:generate"
    leader_only: true
  02_prisma_migrate:
    # 環境変数は option_settings や Beanstalk のコンソールから設定され、
    # prisma:migrate スクリプト (package.json 内) が process.env を通じて参照することを期待。
    command: "npm run prisma:migrate"
    leader_only: true

# files セクションは 05_ensure_fstab_entry で代替するため削除、またはコメントアウトします。
# files:
#   "/etc/fstab":
#     mode: "000644"
#     owner: root
#     group: root
#     append: true
#     content: |
#       /swapfile swap swap defaults 0 0